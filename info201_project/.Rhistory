print(numbers_mean)
lower_numbers <- numbers[numbers < numbers_mean]
# Create a vector `higher_numbers` that the values in your `numbers` vector
# that are higher than `numbers_mean` (again, using vector filtering)
higher_numbers <- numbers[numbers > numbers_mean]
print(higher_numbers)
return(result)
}
# Create a variable `summary_1_to_100` by passing a vector of the values one
# through one hundred to your `summarize_vector` function
summary_1_to_100 <- summarize_vector(nums <- seq(1, 100))
print(summary_1_to_100)
styler:::set_style_transformers()
movies <- c("Shawshank's redemption", "goal", "Slience lamb", "Horse's whisper", "Whiplash", "Titantic") ### TOO LONG
print(movies)
movies <- c("Shawshank's redemption", "dddd", "ddddd") ### TOO LONG
print(movies)
lintr:::addin_lint()
lintr:::addin_lint()
# to your function. For example, remove_digits(c("INFO 201", "CSE 142"))
test_vector <- c("a20", "2223q", "222f")
print(remove_digits(test_vector)
return (input_vector <- gsub('[[:digit:]]+', "", input_vector))
}
# Demonstrate that your approach is successful by passing a vector of courses
# to your function. For example, remove_digits(c("INFO 201", "CSE 142"))
test_vector <- c("a20", "2223q", "222f")
print(remove_digits(test_vector))
movies <- c("Shawshank's redemption", "goal", "Slience lamb",
"Horse's whisper", "Whiplash", "Titantic") ### TOO LONG
print(movies)
# Create a vector
# spaces between words, and you should a space after a comma)
make_introduction <- function(name, age) {
return(paste("Hello, my name is ", name, ", and I\'m ",
age, " years old", sep = ""))
}
# Create a variable `my_intro` by passing your variables `my_name` and `my_age`
# into your `make_introduction()` function
my_intro <- make_introduction("yichi", 21)
print(my_intro)
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
library("stringr")
library("styler")
library("styler")
style_file("assignment.R")
# (you'll need to install it if you hav
install.packages("styler")
library("stringr")
library("styler")
style_file("assignment.R")
library("stringr")
library("styler")
style_file("C:\Users\Yichi Zhang\OneDrive - UW\Soporhmre\Q1\info 201\a2\a2-azerous1\assignment.R")
library("stringr")
library("styler")
style_file("C:\Users\Yichi Zhang\OneDrive - UW\Soporhmre\Q1\info 201\a2\a2-azerous1\assignment.R")
# Load the the `stringr` package
library("stringr")
library("styler")
style_file("C:\Users\Yichi Zhang\OneDrive - UW\Soporhmre\Q1\info 201\a2\a2-azerous1\assignment.R")
# (you'll need to install it if you haven't used it before)
# It has a variety of functions that make working with string variables easier
# Create a numeric variable `my_age` that is equal to your age
my_age <- 20
# Load the the `stringr` package
library("stringr")
library("styler")
style_file("C:\Users\Yichi Zhang\OneDrive - UW\Soporhmre\Q1\info 201\a2\a2-azerous1\assignment.R")
lintr:::addin_lint()
# to your function. For example, remove_digits(c("INFO 201", "CSE 142"))
test_vector <- c("a20a2", "2223q", "222f")
print(remove_digits(test_vector))
# Vectors -------------------------
# Set up and Defining variables ------------------------------------------------
# Load the the `stringr` package
library("stringr")
style_file("C:\\Users\Yichi Zhang\OneDrive - UW\Soporhmre\Q1\info 201\a2\a2-azerous1\assignment.R")
# (you'll need to install it if you haven't used it before)
# It has a variety of functions that make working with string variables easier
# Create a numeric variable `my_age` that is equal to your age
my_age <- 20
# Load the the `stringr` package
library("stringr")
style_file("C:\\Users\Yichi Zhang\OneDrive - UW\Soporhmre\Q1\info 201\a2\a2-azerous1\assignment.R")
# A2 foundational skills
# Set up and Defining variables ------------------------------------------------
# Load the the `stringr` package
library("stringr")
style_file("C:\Users\Yichi Zhang\OneDrive - UW\Soporhmre\Q1\info 201\a2\a2-azerous1\assignment.R")
# (you'll need to install it if you haven't used it before)
# It has a variety of functions that make working with string variables
# Load the the `stringr` package
library("stringr")
style_file("C:/Users/Yichi Zhang/OneDrive - UW\Soporhmre\Q1\info 201\a2\a2-azerous1\assignment.R")
# (you'll need to install it if you haven't used it before)
# It has a variety of functions that make working with string variables easier
# Create a numeric variable `my_age` that is equal to your age
# Load the the `stringr` package
library("stringr")
style_file("C:/Users/Yichi Zhang/OneDrive - UW\Soporhmre\Q1\info 201\a2\a2-azerous1\assignment.R")
# (you'll need to install it if you haven't used it before)
# It has a variety of functions that make working with string variables easier
# Create a numeric variable `my_age` that is equal to your age
# Load the the `stringr` package
library("stringr")
style_file("C:/Users/Yichi Zhang/OneDrive - UW\Soporhmre\Q1\info 201\a2\a2-azerous1\assignment.R")
# (you'll need to install it if you haven't used it before)
# It has a variety of functions that make working with string variables easier
# Create a numeric variable `my_age` that is equal to your age
# Load the the `stringr` package
library("stringr")
style_file("C:/Users/Yichi Zhang/OneDrive - UW\Soporhmre\Q1\info 201\a2\a2-azerous1\assignment.R")
# (you'll need to install it if you haven't used it before)
# It has a variety of functions that make working with string variables easier
# Create a numeric variable `my_age` that is equal to your age
# Load the the `stringr` package
library("stringr")
style_file("C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/a2/a2-azerous1/assignment.R")
# (you'll need to install it if you haven't used it before)
# It has a variety of functions that make working with string variables easier
# Create a numeric variable `my_age` that is equal to your age
library("stringr")
style_file("C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/a2/a2-azerous1/assignment.R")
# (you'll need to install it if you haven't used it before)
# Load the the `stringr` package
library("stringr")
style_file("C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/a2/a2-azerous1/assignment.R")
lintr:::addin_lint()
styler:::set_style_transformers()
library("stringr")
style_file("C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/a2/a2-azerous1/assignment.R")
library("stringr")
style_file("C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/a2/a2-azerous1/assignment.R")
library("stringr")
style_file("C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/a2/a2-azerous1/assignment.R")
# (you'll need to install it if you haven't used it before)
library("stringr")
style_file("C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/a2/a2-azerous1/assignment.R")
library("stringr")
style_file("C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/a2/a2-azerous1/assignment.R")
lintr:::addin_lint()
lintr:::addin_lint()
lintr:::addin_lint()
Florida <- carData::Florida
View(Florida)
num <- nrow(Florida[Florida$GORE > Florida$BUSH,])
print(num)
num <- nrow(Florida[,Florida$GORE > Florida$BUSH])
print(num)
num <- nrow(Florida[,Florida$GORE > Florida$BUSH])
print(num)
install.packages("titantic")
install.packages(titantic)
install.packages(Titanic)
install.packages(Titanic)
titanic_df <- Titanic
titanic_df <- Titanic
View(titanic_df)
children <- Filter(titanic_df, age == "child")
children <- filter(titanic_df, age == "child")
children <- filter(titanic_df, Age == "child")
children <- titanic_df[titanic_df$age == "child"]
mation about the number children on the Titanic.
children <- titanic_df[titanic_df$age == "child"]
children <- titanic_df[titanic_df$age == "child"]
xxx <- titanic_df$age
xxx <- titanic_df$Age
xxx <- titanic_df[["Age"]]
install.packages(dylpr)
install.packages("dylpr")
install.packages("dplyr")
# with information about the number children on the Titanic.
children <- titanic_df[titanic_df$age == "child"]
children <- filter_al
xxx <- titanic_df[["Age"]]
install.packages("dplyr")
library("dplyr")
children <- filter_all(titanic_df, age == "child")
children <- filter(titanic_df, age == "child")
titanic_df <- Titanic
children <- filter(titanic_df, age == "child")
children <- filter_(titanic_df, age == "child")
shiny::runApp('C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/project/info-201-AF4-project/info201_project')
runApp('C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/project/info-201-AF4-project/info201_project')
runApp('C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/project/info-201-AF4-project/info201_project')
library(styler)
styler::style_file(./app.R)
styler::style_file("./app.R")
setwd("C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/project/info-201-AF4-project/info201_project")
> styler::style_file("./app.R")
styler::style_file("./app.R")
lintr:::addin_lint()
shiny::runApp()
library(rsconnect)
source("temp.R")
library(shiny)
library(leaflet)
library(dplyr)
library(rsconnect)
source("temp.R")
source("app_server.R")
source("app_ui.R")
# The dataset of terroism attack from 2000 to 2018
attack_data <- read.csv(
file = "./data/post_2000_arranged_terriosm_data.csv",
stringsAsFactors = F
)
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(devtools)
library(tidyr)
library(ggplot2)
library(eeptools)
library(usethis)
library(leaflet)
library(dplyr)
library(rsconnect)
source("temp.R")
source("app_server.R")
source("app_ui.R")
# The dataset of terroism attack from 2000 to 2018
attack_data <- read.csv(
file = "./data/post_2000_arranged_terriosm_data.csv",
stringsAsFactors = F
)
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(devtools)
library(tidyr)
library(ggplot2)
library(eeptools)
library(usethis)
library(leaflet)
library(dplyr)
library(rsconnect)
source("temp.R")
source("app_server.R")
source("app_ui.R")
# The dataset of terroism attack from 2000 to 2018
attack_data <- read.csv(
file = "./data/post_2000_arranged_terriosm_data.csv",
stringsAsFactors = F
)
# Run the application
shinyApp(ui = ui, server = server)
library(dplyr)
# This file wranges relevant data and will be sourced into app.R
attack_data <- read.csv("./data/post_2000_arranged_terriosm_data.csv",
stringsAsFactors = FALSE)
View(attack_data)
# Replace NA values with 0 and mutate to add casualty column
attack_data[is.na(attack_data)] <- 0
attack_data <- attack_data %>%
mutate(casualty = number_killed + number_injured)
View(attack_data)
filtered_df <- attack_data %>% select(year, weapon_type, casualty)
View(filtered_df)
selected_year <- filtered_df %>% filter(year == "2000")
View(selected_year)
# Visualization 1
output$attack_map <- renderLeaflet({
filtered_data <- attack_data %>%
filter(year == input$year)
leaflet(data = filtered_data) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircleMarkers(
lat = filtered_data$latitude,
lng = filtered_data$longitude,
color = "red",
popup = paste(
sep = "<br/>",
paste("City: ", filtered_data$city),
paste("Number Killed: ", filtered_data$number_killed),
paste("Number Injured: ", filtered_data$number_injured)
),
radius = sqrt(filtered_data$number_killed) * 2,
stroke = FALSE
)
})
library(dplyr)
library(httr)
library(jsonlite)
library(shiny)
library(DT)
library(eeptools)
# This is the server for our project shiny
# The dataset of terroism attack from 2000 to 2018
attack_data <- read.csv(
file = "./post_2000_arranged_terriosm_data.csv",
stringsAsFactors = F
)
server <- function(input, output) {
# Visualization 1
output$attack_map <- renderLeaflet({
filtered_data <- attack_data %>%
filter(year == input$year)
leaflet(data = filtered_data) %>%
addProviderTiles("CartoDB.Positron") %>%
addCircleMarkers(
lat = filtered_data$latitude,
lng = filtered_data$longitude,
color = "red",
popup = paste(
sep = "<br/>",
paste("City: ", filtered_data$city),
paste("Number Killed: ", filtered_data$number_killed),
paste("Number Injured: ", filtered_data$number_injured)
),
radius = sqrt(filtered_data$number_killed) * 2,
stroke = FALSE
)
})
}
library(shiny)
library(devtools)
library(dplyr)
library(tidyr)
library(httr)
library(jsonlite)
library(ggplot2)
library(eeptools)
library(usethis)
library(rsconnect)
source("app_ui.R")
source("app_server.R")
shinyApp(ui = ui, server = server)
library(shiny)
library(devtools)
library(dplyr)
library(tidyr)
library(httr)
library(jsonlite)
library(ggplot2)
library(eeptools)
library(usethis)
library(rsconnect)
source("app_ui.R")
source("app_server.R")
shinyApp(ui = ui, server = server)
rsconnect::showLogs()
rsconnect::showLogs()
library(shiny)
library(devtools)
library(dplyr)
library(tidyr)
library(httr)
library(jsonlite)
library(ggplot2)
library(eeptools)
library(usethis)
library(rsconnect)
rsconnect::showLogs()
runApp('C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/a7/a7--azerous1')
rsconnect::showLogs()
runApp()
setwd("C:/Users/Yichi Zhang/OneDrive - UW/Soporhmre/Q1/info 201/project/info-201-AF4-project/info201_project")
library(httr)
library(jsonlite)
library(shiny)
library(eeptools)
ui <- fluidPage(
titlePanel("Info 201 project"),
tabsetPanel(
type = "tabs", id = "nav_bar",
tabPanel(
"Introduction",
h1("Project Introduction"),
h1("Reference")
),
tabPanel(
"Background",
h1("History of Terroism attack"),
h1("Why analysis of terroism data matter?")
),
tabPanel(
"Visualization 1",
h1("Global Terrorist attack from 2000 to 2018"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "year", # key this value will be assigned to
label = "Year", # label to display alongside the slider
min = 2000, # minimum slider value
max = 2018, # maximum slider value
value = 2000 # starting value for the slider
)
),
mainPanel(
leafletOutput("attack_map")
)
)
),
tabPanel(
"Visualization 2",
mainPanel(
)
),
tabPanel(
"Summary",
mainPanel(
)
),
tabPanel(
"Summary",
mainPanel(
)
),
tabPanel(
"Summary",
mainPanel(
)
),
tabPanel(
"Summary",
mainPanel(
)
)
)
)
library(shiny)
library(devtools)
library(tidyr)
library(ggplot2)
library(eeptools)
library(usethis)
library(leaflet)
library(dplyr)
library(rsconnect)
source("app_server.R")
source("app_ui2.R")
# Run the application
shinyApp(ui = ui, server = server)
runApp()
library(httr)
library(jsonlite)
library(shiny)
library(eeptools)
ui <- fluidPage(
titlePanel("Info 201 project"),
tabsetPanel(
type = "tabs", id = "nav_bar",
tabPanel(
"Introduction",
h1("Project Introduction"),
h1("Reference")
),
tabPanel(
"Background",
h1("History of Terroism attack"),
h1("Why analysis of terroism data matter?")
),
tabPanel(
"Visualization 1",
h1("Global Terrorist attack from 2000 to 2018"),
sidebarLayout(
sidebarPanel(
sliderInput(
inputId = "year", # key this value will be assigned to
label = "Year", # label to display alongside the slider
min = 2000, # minimum slider value
max = 2018, # maximum slider value
value = 2000 # starting value for the slider
)
),
mainPanel(
leafletOutput("attack_map")
)
)
),
tabPanel(
"Visualization 2",
mainPanel(
)
),
tabPanel(
"Visualization 3",
mainPanel(
)
),
tabPanel(
"Conclusion",
h1("Conclusion"),
h1("Project implication"),
mainPanel(
)
),
tabPanel(
"Technical Report",
mainPanel(
)
),
tabPanel(
"About Team",
mainPanel(
)
)
)
)
runApp()
